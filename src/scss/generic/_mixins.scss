//  $$\      $$\ $$\           $$\
//  $$$\    $$$ |\__|          \__|
//  $$$$\  $$$$ |$$\ $$\   $$\ $$\ $$$$$$$\   $$$$$$$\
//  $$\$$\$$ $$ |$$ |\$$\ $$  |$$ |$$  __$$\ $$  _____|
//  $$ \$$$  $$ |$$ | \$$$$  / $$ |$$ |  $$ |\$$$$$$\
//  $$ |\$  /$$ |$$ | $$  $$<  $$ |$$ |  $$ | \____$$\
//  $$ | \_/ $$ |$$ |$$  /\$$\ $$ |$$ |  $$ |$$$$$$$  |
//  \__|     \__|\__|\__/  \__|\__|\__|  \__|\_______/
//
//
//

// ------------------------------------------------------------
// CSS Angles
// @credit Jeremy Frank/Viget
// @url https://www.viget.com/articles/angled-edges-with-css-masks-and-transforms
// ------------------------------------------------------------
@mixin angle($pseudo, $flip: false, $angle: 1.5deg) {
  // Possible values for $pseudo are: before, after, both
  @if $pseudo == 'before' or $pseudo == 'after' or $pseudo == 'both' {
    position: relative;
    z-index: 1;
    $selector: if($pseudo == 'both', '&:before,&:after', '&:#{$pseudo}');

    #{$selector} {
      background: inherit;
      content: '';
      display: block;
      height: 50%;
      left: 0;
      position: absolute;
      right: 0;
      z-index: -1;
      -webkit-backface-visibility: hidden; // for Chrome Windows
    }

    @if $pseudo == 'before' {
      #{$selector} {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }
    }

    @if $pseudo == 'after' {
      #{$selector} {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 100%;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }

    @if $pseudo == 'both' {
      &:before {
        top: 0;

        @if $flip {
          transform: skewY($angle * -1);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle);
          transform-origin: 100% 0;
        }
      }

      &:after {
        bottom: 0;

        @if $flip {
          transform: skewY($angle);
          transform-origin: 0 0;
        } @else {
          transform: skewY($angle * -1);
          transform-origin: 100%;
        }
      }
    }
  }
}

// ------------------------------------------------------------
// Omega Reset Mixin for Neat
// http://joshfry.me/notes/omega-reset-for-bourbon-neat/
// ------------------------------------------------------------
@mixin omega-reset($nth) {
	&:nth-child(#{$nth}) { margin-right: flex-gutter(); }
	&:nth-child(#{$nth}+1) { clear: none }
}

// ---------------------------------------------------------------------------------
// Image Replacement
// ---------------------------------------------------------------------------------

@mixin img-replacement($width, $height, $display: block) {
	display: $display;
	text-indent: 100%;
	white-space: nowrap;
	overflow: hidden;
	width: $width;
	height: $height;
}

// ---------------------------------------------------------------------------------
// Hide Checkbox Input
// ---------------------------------------------------------------------------------

@mixin hide-checkbox() {
	display: none;
}

// ---------------------------------------------------------------------------------
// Caps
// ---------------------------------------------------------------------------------

@mixin caps($letter-spacing: 0.05em) {
	text-transform: uppercase;
	letter-spacing: $letter-spacing;
}

// ---------------------------------------------------------------------------------
// 3d Transform Mixin
// ---------------------------------------------------------------------------------
@mixin hardware-acceleration {
	backface-visibility: hidden;
	perspective: 1000;
	transform: translate3d(0,0,0);
}

// ---------------------------------------------------------------------------------
// Are you a touch-enabled device? Are you? ANSWER ME!
// Note: Modernizr dependent
// ---------------------------------------------------------------------------------

@mixin is-touch {.touch & { @content }; }
